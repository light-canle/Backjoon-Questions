using System;

// p1309 - 동물원 (S1)
// #DP
// 2025.6.21 solved

public class Program
{
    public static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());
        if (n == 1) {
            Console.WriteLine(3);
            return;
        }
        else if (n == 2)
        {
            Console.WriteLine(7);
            return;
        }
        // 처음 4개의 값이 3, 7, 17, 41이 나오는데,
        // 17 = 7 * 2 + 3, 41 = 2 * 17 + 7이 되는 것을 보고 식을 이렇게 썼고, 실제 답이었다.
        int[] dp = new int[n + 1];
        dp[1] = 3;
        dp[2] = 7;
        for (int i = 3; i <= n; i++)
        {
            dp[i] = 2 * dp[i - 1] + dp[i - 2];
            dp[i] %= 9901;
        }
        Console.WriteLine(dp[n]);
    }
}

/*
다른 방법
한 행을 한 상태로 보았을 때, 한 행의 경우의 수는 3가지가 나온다. → 사자가 없음, 왼쪽에 1마리, 오른쪽에 1마리
그리고 사자가 서로 인접하면 안되기에, 사자가 있는 경우에는 인접한 행에 동일한 상태가 올 수는 없다. (단 빈칸의 경우 문제가 없음) 
즉, 위의 행에 사자가 없으면, 그 다음 행에는 3가지 경우가 모두 오고, 사자가 있으면 2가지 경우가 올 수 있는 것이다.
그래서 이전 계층에서 마지막 행의 상태가 사자 없음, 왼쪽, 오른쪽이었을 때의 경우의 수를 각각 저장한 뒤 합하는 방식으로도 구할 수 있다.
처음에는 셋 다 1,1,1로 초기화 하고, ‘없음’ 부분은 이전 세 경우의 수들의 합이 되고, ‘왼쪽’, ‘오른쪽’은 이전 행의 상태에서 ‘없음’과 자신을 제외한 다른 하나의 합이 된다.

N	    1	  2	      3	      4
없음	  1	  1+1+1=3	3+2+2=7	7+5+5=17
왼쪽  	1	  1+1=2	  3+2=5	  7+5=12
오른쪽	1	  1+1=2	  3+2=5	  7+5=12
합	  3	  7	      17	    41
*/
